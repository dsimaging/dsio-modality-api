{
	"info": {
		"_postman_id": "b104d253-3155-41bb-b89c-170da9bc7c73",
		"name": "Dentsply Sirona Intraoral Modality API",
		"description": "This API is used for acquisition and control of Intraoral sensors. The Devices section provides methods for retrieving information about available intraoral devices (i.e., USB or WiFi interfaces). The Acquisition section provides methods for acquisition of images from a device.\n",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Devices",
			"item": [
				{
					"name": "Get All Devices",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/devices",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices"
							]
						},
						"description": "Returns a list of the devices that this service currently provides."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"deviceId\": \"tempor qui aute ut\",\n  \"name\": \"Schick 33: 213402981\",\n  \"iconUrl\": \"http://example.com/api/devices/-987654321/icon.png\",\n  \"hasSensor\": true,\n  \"status\": \"Available\",\n  \"interfaceType\": \"usb\",\n  \"modelName\": \"Schick AE USB Interface\",\n  \"serialNumber\": \"34-05921813233\",\n  \"version\": \"dolore in ea est in\",\n  \"battery\": {\n   \"hasBattery\": true,\n   \"percentRemaining\": 78,\n   \"level\": \"Good\"\n  }\n },\n {\n  \"deviceId\": \"esse exercitation\",\n  \"name\": \"Schick 33: 213402981\",\n  \"iconUrl\": \"http://example.com/api/devices/-987654321/icon.png\",\n  \"hasSensor\": true,\n  \"status\": \"Available\",\n  \"interfaceType\": \"usb\",\n  \"modelName\": \"Schick AE USB Interface\",\n  \"serialNumber\": \"34-05921813233\",\n  \"version\": \"Excepteur ut esse\",\n  \"battery\": {\n   \"hasBattery\": true,\n   \"percentRemaining\": 78,\n   \"level\": \"Good\"\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Subscribe to Device Events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/devices/subscribe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								"subscribe"
							]
						},
						"description": "Subscribe to changes in the Device list using Server Sent Events (EventSource). The API service will send this event when a device is added, removed or changed. The event data consists of a `DeviceInfo` object indicating the device that was affected. API consumers can update their own list accordingly, or retrieve an updated list of devices using the `GET /devices` method.\n"
					},
					"response": [
						{
							"name": "Subscription started",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/subscribe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										"subscribe"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/event-stream"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Device Information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/devices/:deviceId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":deviceId"
							],
							"variable": [
								{
									"key": "deviceId",
									"value": "<string>",
									"description": "(Required) The Id of the device"
								}
							]
						},
						"description": "Returns information about a device."
					},
					"response": [
						{
							"name": "Device not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:deviceId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":deviceId"
									],
									"variable": [
										{
											"key": "deviceId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"deviceId\": \"mollit officia\",\n \"name\": \"Schick 33: 213402981\",\n \"iconUrl\": \"http://example.com/api/devices/-987654321/icon.png\",\n \"hasSensor\": true,\n \"status\": \"Available\",\n \"interfaceType\": \"usb\",\n \"modelName\": \"Schick AE USB Interface\",\n \"serialNumber\": \"34-05921813233\",\n \"version\": \"consequat ea in\",\n \"battery\": {\n  \"hasBattery\": true,\n  \"percentRemaining\": 78,\n  \"level\": \"Good\"\n }\n}"
						}
					]
				},
				{
					"name": "Get Sensor Information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/devices/:deviceId/sensor",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"devices",
								":deviceId",
								"sensor"
							],
							"variable": [
								{
									"key": "deviceId",
									"value": "<string>",
									"description": "(Required) The Id of the device"
								}
							]
						},
						"description": "Returns information about the currently connected sensor. An empty response indicates no sensor connected."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:deviceId/sensor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":deviceId",
										"sensor"
									],
									"variable": [
										{
											"key": "deviceId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"modelName\": \"Schick 33\",\n \"serialNumber\": \"id\",\n \"brand\": \"Schick\",\n \"family\": \"Synergy\",\n \"size\": 2,\n \"width\": 2400,\n \"height\": 1708,\n \"supportsBinning\": false,\n \"version\": \"a\"\n}"
						},
						{
							"name": "Device not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/devices/:deviceId/sensor",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"devices",
										":deviceId",
										"sensor"
									],
									"variable": [
										{
											"key": "deviceId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "The device management API provides methods to retrieve information, such as names, icons and status for devices.\n",
			"protocolProfileBehavior": {}
		},
		{
			"name": "Images",
			"item": [
				{
					"name": "Create Acquisition Session",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"deviceId\": \"<string>\",\n    \"clientName\": \"<string>\",\n    \"context\": \"<object>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/acquisition",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"acquisition"
							]
						},
						"description": "Creates an acquisition session using the supplied device. \n\n  To acquire images from a device, you must first create an `AcquisitionSession`. When a session is created for a device, that device is marked as in use (Device Status changes to `InUse`). The session and the images associated with it persists until the session is deleted. The basic steps needed to acquire an image are:\n  - Create a new session with an `Available` device\n    - Subscribe to `AcquisitionStatus` Event in order react to exposure readiness\n    - Send `AcquisitionInfo` with `enable` set to true\n    - Wait for `AcquisitionStatus` to report `ready` as true\n    - Inform user that they may initiate x-ray exposure\n    - Wait for `AcquisitionStatus` to report `NewImage` or a new `lastImageId` is provided \n    - Retrieve `ImageInfo` for the newly acquired image and download the image using the `imageUrl` property\n  - Delete the acquisition session\n"
					},
					"response": [
						{
							"name": "Device not found",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deviceId\": \"<string>\",\n    \"clientName\": \"OP4 Workstation\",\n    \"context\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/acquisition",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Not enough storage available",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deviceId\": \"<string>\",\n    \"clientName\": \"OP4 Workstation\",\n    \"context\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/acquisition",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition"
									]
								}
							},
							"status": "Insufficient Storage (WebDAV) (RFC 4918)",
							"code": 507,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Session was successfully created",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deviceId\": \"<string>\",\n    \"clientName\": \"OP4 Workstation\",\n    \"context\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/acquisition",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sessionId\": \"be362e71-9c18-4f3c-a9ab-d536d7a8b4fd\",\n \"deviceId\": \"in Excepteur culpa tempor consequat\",\n \"clientName\": \"OP4 Workstation\",\n \"createdOn\": \"1962-08-30T06:22:00.750Z\",\n \"context\": {}\n}"
						},
						{
							"name": "Internal error",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deviceId\": \"<string>\",\n    \"clientName\": \"OP4 Workstation\",\n    \"context\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/acquisition",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Invalid request",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deviceId\": \"<string>\",\n    \"clientName\": \"OP4 Workstation\",\n    \"context\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/acquisition",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Device is in use",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deviceId\": \"<string>\",\n    \"clientName\": \"OP4 Workstation\",\n    \"context\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/acquisition",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition"
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sessionId\": \"be362e71-9c18-4f3c-a9ab-d536d7a8b4fd\",\n \"deviceId\": \"in Excepteur culpa tempor consequat\",\n \"clientName\": \"OP4 Workstation\",\n \"createdOn\": \"1962-08-30T06:22:00.750Z\",\n \"context\": {}\n}"
						}
					]
				},
				{
					"name": "Get Acquisition Session",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/acquisition/:sessionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"acquisition",
								":sessionId"
							],
							"variable": [
								{
									"key": "sessionId",
									"value": "<string>",
									"description": "(Required) The session Id"
								}
							]
						},
						"description": "Retrieve acquisition session information."
					},
					"response": [
						{
							"name": "Session not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sessionId\": \"be362e71-9c18-4f3c-a9ab-d536d7a8b4fd\",\n \"deviceId\": \"in Excepteur culpa tempor consequat\",\n \"clientName\": \"OP4 Workstation\",\n \"createdOn\": \"1962-08-30T06:22:00.750Z\",\n \"context\": {}\n}"
						}
					]
				},
				{
					"name": "Update Acquisition Session",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"deviceId\": \"<string>\",\n    \"clientName\": \"<string>\",\n    \"context\": \"<object>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/acquisition/:sessionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"acquisition",
								":sessionId"
							],
							"variable": [
								{
									"key": "sessionId",
									"value": "<string>",
									"description": "(Required) The session Id"
								}
							]
						},
						"description": "Update an acquisition session. You may use this method to switch devices or change the client name."
					},
					"response": [
						{
							"name": "Session was successfully updated",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deviceId\": \"<string>\",\n    \"clientName\": \"OP4 Workstation\",\n    \"context\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sessionId\": \"be362e71-9c18-4f3c-a9ab-d536d7a8b4fd\",\n \"deviceId\": \"in Excepteur culpa tempor consequat\",\n \"clientName\": \"OP4 Workstation\",\n \"createdOn\": \"1962-08-30T06:22:00.750Z\",\n \"context\": {}\n}"
						},
						{
							"name": "Session not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deviceId\": \"<string>\",\n    \"clientName\": \"OP4 Workstation\",\n    \"context\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Device is in use",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"deviceId\": \"<string>\",\n    \"clientName\": \"OP4 Workstation\",\n    \"context\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "Conflict",
							"code": 409,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"sessionId\": \"be362e71-9c18-4f3c-a9ab-d536d7a8b4fd\",\n \"deviceId\": \"in Excepteur culpa tempor consequat\",\n \"clientName\": \"OP4 Workstation\",\n \"createdOn\": \"1962-08-30T06:22:00.750Z\",\n \"context\": {}\n}"
						}
					]
				},
				{
					"name": "Delete Acquisition Session",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/acquisition/:sessionId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"acquisition",
								":sessionId"
							],
							"variable": [
								{
									"key": "sessionId",
									"value": "<string>",
									"description": "(Required) The session Id"
								}
							]
						},
						"description": "Delete an acquisition session. When you have finished image acquisition and retrieved all images, delete the `AcquisitionSession` to make the device available again. Deleting the session will delete all images associated with it."
					},
					"response": [
						{
							"name": "Session not found",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Successfully deleted session",
							"originalRequest": {
								"method": "DELETE",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Acquisition Status",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/acquisition/:sessionId/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"acquisition",
								":sessionId",
								"status"
							],
							"variable": [
								{
									"key": "sessionId",
									"value": "<string>",
									"description": "(Required) The session Id"
								}
							]
						},
						"description": "Returns current status of an exposure. This may be used to poll the status of the current exposure."
					},
					"response": [
						{
							"name": "Session not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId",
										"status"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId/status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId",
										"status"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"ready\": true,\n \"state\": \"Ready\",\n \"lastImageId\": \"04d2b36f-3613-4c29-b130-923c93a6187f\",\n \"totalImages\": 4\n}"
						}
					]
				},
				{
					"name": "Subscribe to Acquisition Status Events",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/acquisition/:sessionId/status/subscribe",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"acquisition",
								":sessionId",
								"status",
								"subscribe"
							],
							"variable": [
								{
									"key": "sessionId",
									"value": "<string>",
									"description": "(Required) The session Id"
								}
							]
						},
						"description": "Subscribe to the exposure status using Server Sent Events (EventSource). The API service will send status updates whenever the Acquisition state changes. By subscribing to exposure status, a client may react quickly to state transitions making the application feel more responsive."
					},
					"response": [
						{
							"name": "Session not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId/status/subscribe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId",
										"status",
										"subscribe"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Subscription started",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId/status/subscribe",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId",
										"status",
										"subscribe"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/event-stream"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get Acquisition Information",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/acquisition/:sessionId/info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"acquisition",
								":sessionId",
								"info"
							],
							"variable": [
								{
									"key": "sessionId",
									"value": "<string>",
									"description": "(Required) The session Id"
								}
							]
						},
						"description": "Returns AcquisitionInfo for the next exposure."
					},
					"response": [
						{
							"name": "Session not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId",
										"info"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId",
										"info"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"enable\": true,\n \"rotation\": 90,\n \"binning\": \"Unbinned\",\n \"applyLut\": true,\n \"context\": {}\n}"
						}
					]
				},
				{
					"name": "Update Acquisition Information",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"enable\": \"<boolean>\",\n    \"rotation\": \"<number>\",\n    \"binning\": \"<string>\",\n    \"applyLut\": \"<boolean>\",\n    \"context\": \"<object>\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/acquisition/:sessionId/info",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"acquisition",
								":sessionId",
								"info"
							],
							"variable": [
								{
									"key": "sessionId",
									"value": "<string>",
									"description": "(Required) The session Id"
								}
							]
						},
						"description": "Set AcquisitionInfo for the next exposure. To initiate an exposure, you must use this method to enable acquisition and provide information about how the sensor is oriented. `AcquisitionStatus` will report the state `NoAcquisitionInfo` if you have not yet provided `AcquisitionInfo`."
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enable\": true,\n    \"rotation\": 90,\n    \"binning\": \"Unbinned\",\n    \"applyLut\": true,\n    \"context\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId",
										"info"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"enable\": true,\n \"rotation\": 90,\n \"binning\": \"Unbinned\",\n \"applyLut\": true,\n \"context\": \"<object>\"\n}"
						},
						{
							"name": "Session not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"enable\": true,\n    \"rotation\": 90,\n    \"binning\": \"Unbinned\",\n    \"applyLut\": true,\n    \"context\": \"<object>\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId/info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId",
										"info"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Get All Images",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/acquisition/:sessionId/images",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"acquisition",
								":sessionId",
								"images"
							],
							"variable": [
								{
									"key": "sessionId",
									"value": "<string>",
									"description": "(Required) The session Id"
								}
							]
						},
						"description": "Returns information about all images acquired in the session"
					},
					"response": [
						{
							"name": "Session not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId/images",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId",
										"images"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId/images",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId",
										"images"
									],
									"variable": [
										{
											"key": "sessionId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n {\n  \"id\": \"160c98f9-d188-4118-94c4-697161fd5caf\",\n  \"createdOn\": \"1949-04-27T08:47:07.603Z\",\n  \"width\": 2400,\n  \"height\": 1708,\n  \"bitsPerPixel\": 12,\n  \"bytesPerPixel\": 2,\n  \"pixelSizeX\": 0.015,\n  \"pixelSizeY\": 0.015,\n  \"previewUrl\": \"http://example.com/api/acquisition/be362e71-9c18-4f3c-a9ab-d536d7a8b4fd/images/160c98f9-d188-4118-94c4-697161fd5caf/preview.jpg\",\n  \"imageUrl\": \"http://example.com/api/acquisition/be362e71-9c18-4f3c-a9ab-d536d7a8b4fd/images/160c98f9-d188-4118-94c4-697161fd5caf/image.png\",\n  \"pixelHash\": {\n   \"alg\": \"MD5\",\n   \"hash\": \"536c36b632ea8256a50ec6396d4e7ea3\"\n  },\n  \"deviceInfo\": {\n   \"deviceId\": \"voluptate tempor exercitation adipisicing veniam\",\n   \"name\": \"Schick 33: 213402981\",\n   \"iconUrl\": \"http://example.com/api/devices/-987654321/icon.png\",\n   \"hasSensor\": true,\n   \"status\": \"Available\",\n   \"interfaceType\": \"usb\",\n   \"modelName\": \"Schick AE USB Interface\",\n   \"serialNumber\": \"34-05921813233\",\n   \"version\": \"in Lorem aliqua\",\n   \"battery\": {\n    \"hasBattery\": true,\n    \"percentRemaining\": 78,\n    \"level\": \"Good\"\n   }\n  },\n  \"sensorInfo\": {\n   \"modelName\": \"Schick 33\",\n   \"serialNumber\": \"nulla\",\n   \"brand\": \"Schick\",\n   \"family\": \"Synergy\",\n   \"size\": 2,\n   \"width\": 2400,\n   \"height\": 1708,\n   \"supportsBinning\": false,\n   \"version\": \"sit consequat commodo officia anim\"\n  },\n  \"acquisitionInfo\": {\n   \"enable\": true,\n   \"rotation\": 90,\n   \"binning\": \"Unbinned\",\n   \"applyLut\": true,\n   \"context\": \"<object>\"\n  },\n  \"lutInfo\": {\n   \"gamma\": 2.3,\n   \"slope\": 65535,\n   \"offset\": 0,\n   \"totalGrays\": 4096,\n   \"minimumGray\": 3612,\n   \"maximumGray\": 418\n  },\n  \"exposureInfo\": {\n   \"min\": -1,\n   \"max\": 1,\n   \"low\": -0.5,\n   \"high\": 0.5,\n   \"optimum\": 0,\n   \"value\": -0.24723\n  }\n },\n {\n  \"id\": \"160c98f9-d188-4118-94c4-697161fd5caf\",\n  \"createdOn\": \"1961-05-21T05:15:45.554Z\",\n  \"width\": 2400,\n  \"height\": 1708,\n  \"bitsPerPixel\": 12,\n  \"bytesPerPixel\": 2,\n  \"pixelSizeX\": 0.015,\n  \"pixelSizeY\": 0.015,\n  \"previewUrl\": \"http://example.com/api/acquisition/be362e71-9c18-4f3c-a9ab-d536d7a8b4fd/images/160c98f9-d188-4118-94c4-697161fd5caf/preview.jpg\",\n  \"imageUrl\": \"http://example.com/api/acquisition/be362e71-9c18-4f3c-a9ab-d536d7a8b4fd/images/160c98f9-d188-4118-94c4-697161fd5caf/image.png\",\n  \"pixelHash\": {\n   \"alg\": \"MD5\",\n   \"hash\": \"536c36b632ea8256a50ec6396d4e7ea3\"\n  },\n  \"deviceInfo\": {\n   \"deviceId\": \"sit consequat consectetur dolore magna\",\n   \"name\": \"Schick 33: 213402981\",\n   \"iconUrl\": \"http://example.com/api/devices/-987654321/icon.png\",\n   \"hasSensor\": false,\n   \"status\": \"Available\",\n   \"interfaceType\": \"usb\",\n   \"modelName\": \"Schick AE USB Interface\",\n   \"serialNumber\": \"34-05921813233\",\n   \"version\": \"cillum aliquip velit\",\n   \"battery\": {\n    \"hasBattery\": true,\n    \"percentRemaining\": 78,\n    \"level\": \"Good\"\n   }\n  },\n  \"sensorInfo\": {\n   \"modelName\": \"Schick 33\",\n   \"serialNumber\": \"enim anim velit id dolor\",\n   \"brand\": \"Schick\",\n   \"family\": \"Synergy\",\n   \"size\": 2,\n   \"width\": 2400,\n   \"height\": 1708,\n   \"supportsBinning\": true,\n   \"version\": \"magna amet\"\n  },\n  \"acquisitionInfo\": {\n   \"enable\": true,\n   \"rotation\": 90,\n   \"binning\": \"Unbinned\",\n   \"applyLut\": true,\n   \"context\": \"<object>\"\n  },\n  \"lutInfo\": {\n   \"gamma\": 2.3,\n   \"slope\": 65535,\n   \"offset\": 0,\n   \"totalGrays\": 4096,\n   \"minimumGray\": 3612,\n   \"maximumGray\": 418\n  },\n  \"exposureInfo\": {\n   \"min\": -1,\n   \"max\": 1,\n   \"low\": -0.5,\n   \"high\": 0.5,\n   \"optimum\": 0,\n   \"value\": -0.24723\n  }\n }\n]"
						}
					]
				},
				{
					"name": "Get Image",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/acquisition/:sessionId/images/:imageId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"acquisition",
								":sessionId",
								"images",
								":imageId"
							],
							"variable": [
								{
									"key": "sessionId",
									"value": "<string>",
									"description": "(Required) The session Id"
								},
								{
									"key": "imageId",
									"value": "<string>",
									"description": "(Required) The image Id"
								}
							]
						},
						"description": "Returns information about the specified image"
					},
					"response": [
						{
							"name": "Success",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId/images/:imageId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId",
										"images",
										":imageId"
									],
									"variable": [
										{
											"key": "sessionId"
										},
										{
											"key": "imageId"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"160c98f9-d188-4118-94c4-697161fd5caf\",\n \"createdOn\": \"1971-10-05T05:20:15.570Z\",\n \"width\": 2400,\n \"height\": 1708,\n \"bitsPerPixel\": 12,\n \"bytesPerPixel\": 2,\n \"pixelSizeX\": 0.015,\n \"pixelSizeY\": 0.015,\n \"previewUrl\": \"http://example.com/api/acquisition/be362e71-9c18-4f3c-a9ab-d536d7a8b4fd/images/160c98f9-d188-4118-94c4-697161fd5caf/preview.jpg\",\n \"imageUrl\": \"http://example.com/api/acquisition/be362e71-9c18-4f3c-a9ab-d536d7a8b4fd/images/160c98f9-d188-4118-94c4-697161fd5caf/image.png\",\n \"pixelHash\": {\n  \"alg\": \"MD5\",\n  \"hash\": \"536c36b632ea8256a50ec6396d4e7ea3\"\n },\n \"deviceInfo\": {\n  \"deviceId\": \"enim\",\n  \"name\": \"Schick 33: 213402981\",\n  \"iconUrl\": \"http://example.com/api/devices/-987654321/icon.png\",\n  \"hasSensor\": false,\n  \"status\": \"Available\",\n  \"interfaceType\": \"usb\",\n  \"modelName\": \"Schick AE USB Interface\",\n  \"serialNumber\": \"34-05921813233\",\n  \"version\": \"fugiat vol\",\n  \"battery\": {\n   \"hasBattery\": true,\n   \"percentRemaining\": 78,\n   \"level\": \"Good\"\n  }\n },\n \"sensorInfo\": {\n  \"modelName\": \"Schick 33\",\n  \"serialNumber\": \"eu exercitation in consequat dolore\",\n  \"brand\": \"Schick\",\n  \"family\": \"Synergy\",\n  \"size\": 2,\n  \"width\": 2400,\n  \"height\": 1708,\n  \"supportsBinning\": false,\n  \"version\": \"aliqua\"\n },\n \"acquisitionInfo\": {\n  \"enable\": true,\n  \"rotation\": 90,\n  \"binning\": \"Unbinned\",\n  \"applyLut\": true,\n  \"context\": \"<object>\"\n },\n \"lutInfo\": {\n  \"gamma\": 2.3,\n  \"slope\": 65535,\n  \"offset\": 0,\n  \"totalGrays\": 4096,\n  \"minimumGray\": 3612,\n  \"maximumGray\": 418\n },\n \"exposureInfo\": {\n  \"min\": -1,\n  \"max\": 1,\n  \"low\": -0.5,\n  \"high\": 0.5,\n  \"optimum\": 0,\n  \"value\": -0.24723\n }\n}"
						},
						{
							"name": "Session or image not found",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"description": {
											"content": "Added as a part of security scheme: basic",
											"type": "text/plain"
										},
										"key": "Authorization",
										"value": "Basic <credentials>"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/acquisition/:sessionId/images/:imageId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"acquisition",
										":sessionId",
										"images",
										":imageId"
									],
									"variable": [
										{
											"key": "sessionId"
										},
										{
											"key": "imageId"
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						}
					]
				}
			],
			"description": "The Acquisition API provides methods to acquire one or more images from a device.\n",
			"protocolProfileBehavior": {}
		}
	],
	"auth": {
		"type": "basic",
		"basic": [
			{
				"key": "username",
				"value": "<Basic Auth Username>",
				"type": "string"
			},
			{
				"key": "password",
				"value": "<Basic Auth Password>",
				"type": "string"
			}
		]
	},
	"variable": [
		{
			"id": "baseUrl",
			"key": "baseUrl",
			"value": "https://localhost:43809/api/v1",
			"type": "string"
		}
	],
	"protocolProfileBehavior": {}
}